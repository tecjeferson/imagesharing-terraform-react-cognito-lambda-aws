import { RekognitionServiceException as __BaseException } from "./RekognitionServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export var Attribute;
(function (Attribute) {
    Attribute["ALL"] = "ALL";
    Attribute["DEFAULT"] = "DEFAULT";
})(Attribute || (Attribute = {}));
export var BodyPart;
(function (BodyPart) {
    BodyPart["FACE"] = "FACE";
    BodyPart["HEAD"] = "HEAD";
    BodyPart["LEFT_HAND"] = "LEFT_HAND";
    BodyPart["RIGHT_HAND"] = "RIGHT_HAND";
})(BodyPart || (BodyPart = {}));
export var ProtectiveEquipmentType;
(function (ProtectiveEquipmentType) {
    ProtectiveEquipmentType["FACE_COVER"] = "FACE_COVER";
    ProtectiveEquipmentType["HAND_COVER"] = "HAND_COVER";
    ProtectiveEquipmentType["HEAD_COVER"] = "HEAD_COVER";
})(ProtectiveEquipmentType || (ProtectiveEquipmentType = {}));
export var LandmarkType;
(function (LandmarkType) {
    LandmarkType["chinBottom"] = "chinBottom";
    LandmarkType["eyeLeft"] = "eyeLeft";
    LandmarkType["eyeRight"] = "eyeRight";
    LandmarkType["leftEyeBrowLeft"] = "leftEyeBrowLeft";
    LandmarkType["leftEyeBrowRight"] = "leftEyeBrowRight";
    LandmarkType["leftEyeBrowUp"] = "leftEyeBrowUp";
    LandmarkType["leftEyeDown"] = "leftEyeDown";
    LandmarkType["leftEyeLeft"] = "leftEyeLeft";
    LandmarkType["leftEyeRight"] = "leftEyeRight";
    LandmarkType["leftEyeUp"] = "leftEyeUp";
    LandmarkType["leftPupil"] = "leftPupil";
    LandmarkType["midJawlineLeft"] = "midJawlineLeft";
    LandmarkType["midJawlineRight"] = "midJawlineRight";
    LandmarkType["mouthDown"] = "mouthDown";
    LandmarkType["mouthLeft"] = "mouthLeft";
    LandmarkType["mouthRight"] = "mouthRight";
    LandmarkType["mouthUp"] = "mouthUp";
    LandmarkType["nose"] = "nose";
    LandmarkType["noseLeft"] = "noseLeft";
    LandmarkType["noseRight"] = "noseRight";
    LandmarkType["rightEyeBrowLeft"] = "rightEyeBrowLeft";
    LandmarkType["rightEyeBrowRight"] = "rightEyeBrowRight";
    LandmarkType["rightEyeBrowUp"] = "rightEyeBrowUp";
    LandmarkType["rightEyeDown"] = "rightEyeDown";
    LandmarkType["rightEyeLeft"] = "rightEyeLeft";
    LandmarkType["rightEyeRight"] = "rightEyeRight";
    LandmarkType["rightEyeUp"] = "rightEyeUp";
    LandmarkType["rightPupil"] = "rightPupil";
    LandmarkType["upperJawlineLeft"] = "upperJawlineLeft";
    LandmarkType["upperJawlineRight"] = "upperJawlineRight";
})(LandmarkType || (LandmarkType = {}));
export var KnownGenderType;
(function (KnownGenderType) {
    KnownGenderType["Female"] = "Female";
    KnownGenderType["Male"] = "Male";
    KnownGenderType["Nonbinary"] = "Nonbinary";
    KnownGenderType["Unlisted"] = "Unlisted";
})(KnownGenderType || (KnownGenderType = {}));
export var GenderType;
(function (GenderType) {
    GenderType["Female"] = "Female";
    GenderType["Male"] = "Male";
})(GenderType || (GenderType = {}));
export var CelebrityRecognitionSortBy;
(function (CelebrityRecognitionSortBy) {
    CelebrityRecognitionSortBy["ID"] = "ID";
    CelebrityRecognitionSortBy["TIMESTAMP"] = "TIMESTAMP";
})(CelebrityRecognitionSortBy || (CelebrityRecognitionSortBy = {}));
export var QualityFilter;
(function (QualityFilter) {
    QualityFilter["AUTO"] = "AUTO";
    QualityFilter["HIGH"] = "HIGH";
    QualityFilter["LOW"] = "LOW";
    QualityFilter["MEDIUM"] = "MEDIUM";
    QualityFilter["NONE"] = "NONE";
})(QualityFilter || (QualityFilter = {}));
export var OrientationCorrection;
(function (OrientationCorrection) {
    OrientationCorrection["ROTATE_0"] = "ROTATE_0";
    OrientationCorrection["ROTATE_180"] = "ROTATE_180";
    OrientationCorrection["ROTATE_270"] = "ROTATE_270";
    OrientationCorrection["ROTATE_90"] = "ROTATE_90";
})(OrientationCorrection || (OrientationCorrection = {}));
export class ImageTooLargeException extends __BaseException {
    constructor(opts) {
        super({
            name: "ImageTooLargeException",
            $fault: "client",
            ...opts,
        });
        this.name = "ImageTooLargeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ImageTooLargeException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class InternalServerError extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerError",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerError";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerError.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class InvalidImageFormatException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidImageFormatException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidImageFormatException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidImageFormatException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class InvalidParameterException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class InvalidS3ObjectException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidS3ObjectException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidS3ObjectException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidS3ObjectException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class ProvisionedThroughputExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ProvisionedThroughputExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ProvisionedThroughputExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ProvisionedThroughputExceededException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "server",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export var ContentClassifier;
(function (ContentClassifier) {
    ContentClassifier["FREE_OF_ADULT_CONTENT"] = "FreeOfAdultContent";
    ContentClassifier["FREE_OF_PERSONALLY_IDENTIFIABLE_INFORMATION"] = "FreeOfPersonallyIdentifiableInformation";
})(ContentClassifier || (ContentClassifier = {}));
export var ContentModerationSortBy;
(function (ContentModerationSortBy) {
    ContentModerationSortBy["NAME"] = "NAME";
    ContentModerationSortBy["TIMESTAMP"] = "TIMESTAMP";
})(ContentModerationSortBy || (ContentModerationSortBy = {}));
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class ResourceInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class ResourceAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export var DatasetType;
(function (DatasetType) {
    DatasetType["TEST"] = "TEST";
    DatasetType["TRAIN"] = "TRAIN";
})(DatasetType || (DatasetType = {}));
export var DatasetStatus;
(function (DatasetStatus) {
    DatasetStatus["CREATE_COMPLETE"] = "CREATE_COMPLETE";
    DatasetStatus["CREATE_FAILED"] = "CREATE_FAILED";
    DatasetStatus["CREATE_IN_PROGRESS"] = "CREATE_IN_PROGRESS";
    DatasetStatus["DELETE_IN_PROGRESS"] = "DELETE_IN_PROGRESS";
    DatasetStatus["UPDATE_COMPLETE"] = "UPDATE_COMPLETE";
    DatasetStatus["UPDATE_FAILED"] = "UPDATE_FAILED";
    DatasetStatus["UPDATE_IN_PROGRESS"] = "UPDATE_IN_PROGRESS";
})(DatasetStatus || (DatasetStatus = {}));
export var DatasetStatusMessageCode;
(function (DatasetStatusMessageCode) {
    DatasetStatusMessageCode["CLIENT_ERROR"] = "CLIENT_ERROR";
    DatasetStatusMessageCode["SERVICE_ERROR"] = "SERVICE_ERROR";
    DatasetStatusMessageCode["SUCCESS"] = "SUCCESS";
})(DatasetStatusMessageCode || (DatasetStatusMessageCode = {}));
export var ProjectStatus;
(function (ProjectStatus) {
    ProjectStatus["CREATED"] = "CREATED";
    ProjectStatus["CREATING"] = "CREATING";
    ProjectStatus["DELETING"] = "DELETING";
})(ProjectStatus || (ProjectStatus = {}));
export class InvalidPolicyRevisionIdException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidPolicyRevisionIdException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidPolicyRevisionIdException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidPolicyRevisionIdException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export var ProjectVersionStatus;
(function (ProjectVersionStatus) {
    ProjectVersionStatus["COPYING_COMPLETED"] = "COPYING_COMPLETED";
    ProjectVersionStatus["COPYING_FAILED"] = "COPYING_FAILED";
    ProjectVersionStatus["COPYING_IN_PROGRESS"] = "COPYING_IN_PROGRESS";
    ProjectVersionStatus["DELETING"] = "DELETING";
    ProjectVersionStatus["FAILED"] = "FAILED";
    ProjectVersionStatus["RUNNING"] = "RUNNING";
    ProjectVersionStatus["STARTING"] = "STARTING";
    ProjectVersionStatus["STOPPED"] = "STOPPED";
    ProjectVersionStatus["STOPPING"] = "STOPPING";
    ProjectVersionStatus["TRAINING_COMPLETED"] = "TRAINING_COMPLETED";
    ProjectVersionStatus["TRAINING_FAILED"] = "TRAINING_FAILED";
    ProjectVersionStatus["TRAINING_IN_PROGRESS"] = "TRAINING_IN_PROGRESS";
})(ProjectVersionStatus || (ProjectVersionStatus = {}));
export class InvalidPaginationTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidPaginationTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidPaginationTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidPaginationTokenException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export var StreamProcessorStatus;
(function (StreamProcessorStatus) {
    StreamProcessorStatus["FAILED"] = "FAILED";
    StreamProcessorStatus["RUNNING"] = "RUNNING";
    StreamProcessorStatus["STARTING"] = "STARTING";
    StreamProcessorStatus["STOPPED"] = "STOPPED";
    StreamProcessorStatus["STOPPING"] = "STOPPING";
    StreamProcessorStatus["UPDATING"] = "UPDATING";
})(StreamProcessorStatus || (StreamProcessorStatus = {}));
export class ResourceNotReadyException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotReadyException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotReadyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotReadyException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class HumanLoopQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "HumanLoopQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "HumanLoopQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, HumanLoopQuotaExceededException.prototype);
        this.ResourceType = opts.ResourceType;
        this.QuotaCode = opts.QuotaCode;
        this.ServiceCode = opts.ServiceCode;
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export var TextTypes;
(function (TextTypes) {
    TextTypes["LINE"] = "LINE";
    TextTypes["WORD"] = "WORD";
})(TextTypes || (TextTypes = {}));
export var FaceAttributes;
(function (FaceAttributes) {
    FaceAttributes["ALL"] = "ALL";
    FaceAttributes["DEFAULT"] = "DEFAULT";
})(FaceAttributes || (FaceAttributes = {}));
export var FaceSearchSortBy;
(function (FaceSearchSortBy) {
    FaceSearchSortBy["INDEX"] = "INDEX";
    FaceSearchSortBy["TIMESTAMP"] = "TIMESTAMP";
})(FaceSearchSortBy || (FaceSearchSortBy = {}));
export var VideoJobStatus;
(function (VideoJobStatus) {
    VideoJobStatus["FAILED"] = "FAILED";
    VideoJobStatus["IN_PROGRESS"] = "IN_PROGRESS";
    VideoJobStatus["SUCCEEDED"] = "SUCCEEDED";
})(VideoJobStatus || (VideoJobStatus = {}));
export var VideoColorRange;
(function (VideoColorRange) {
    VideoColorRange["FULL"] = "FULL";
    VideoColorRange["LIMITED"] = "LIMITED";
})(VideoColorRange || (VideoColorRange = {}));
export var LabelDetectionSortBy;
(function (LabelDetectionSortBy) {
    LabelDetectionSortBy["NAME"] = "NAME";
    LabelDetectionSortBy["TIMESTAMP"] = "TIMESTAMP";
})(LabelDetectionSortBy || (LabelDetectionSortBy = {}));
export var PersonTrackingSortBy;
(function (PersonTrackingSortBy) {
    PersonTrackingSortBy["INDEX"] = "INDEX";
    PersonTrackingSortBy["TIMESTAMP"] = "TIMESTAMP";
})(PersonTrackingSortBy || (PersonTrackingSortBy = {}));
export var TechnicalCueType;
(function (TechnicalCueType) {
    TechnicalCueType["BLACK_FRAMES"] = "BlackFrames";
    TechnicalCueType["COLOR_BARS"] = "ColorBars";
    TechnicalCueType["CONTENT"] = "Content";
    TechnicalCueType["END_CREDITS"] = "EndCredits";
    TechnicalCueType["OPENING_CREDITS"] = "OpeningCredits";
    TechnicalCueType["SLATE"] = "Slate";
    TechnicalCueType["STUDIO_LOGO"] = "StudioLogo";
})(TechnicalCueType || (TechnicalCueType = {}));
export var SegmentType;
(function (SegmentType) {
    SegmentType["SHOT"] = "SHOT";
    SegmentType["TECHNICAL_CUE"] = "TECHNICAL_CUE";
})(SegmentType || (SegmentType = {}));
export class IdempotentParameterMismatchException extends __BaseException {
    constructor(opts) {
        super({
            name: "IdempotentParameterMismatchException",
            $fault: "client",
            ...opts,
        });
        this.name = "IdempotentParameterMismatchException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IdempotentParameterMismatchException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export var Reason;
(function (Reason) {
    Reason["EXCEEDS_MAX_FACES"] = "EXCEEDS_MAX_FACES";
    Reason["EXTREME_POSE"] = "EXTREME_POSE";
    Reason["LOW_BRIGHTNESS"] = "LOW_BRIGHTNESS";
    Reason["LOW_CONFIDENCE"] = "LOW_CONFIDENCE";
    Reason["LOW_FACE_QUALITY"] = "LOW_FACE_QUALITY";
    Reason["LOW_SHARPNESS"] = "LOW_SHARPNESS";
    Reason["SMALL_BOUNDING_BOX"] = "SMALL_BOUNDING_BOX";
})(Reason || (Reason = {}));
export class MalformedPolicyDocumentException extends __BaseException {
    constructor(opts) {
        super({
            name: "MalformedPolicyDocumentException",
            $fault: "client",
            ...opts,
        });
        this.name = "MalformedPolicyDocumentException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export class VideoTooLargeException extends __BaseException {
    constructor(opts) {
        super({
            name: "VideoTooLargeException",
            $fault: "client",
            ...opts,
        });
        this.name = "VideoTooLargeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, VideoTooLargeException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
        this.Logref = opts.Logref;
    }
}
export var StreamProcessorParameterToDelete;
(function (StreamProcessorParameterToDelete) {
    StreamProcessorParameterToDelete["ConnectedHomeMinConfidence"] = "ConnectedHomeMinConfidence";
    StreamProcessorParameterToDelete["RegionsOfInterest"] = "RegionsOfInterest";
})(StreamProcessorParameterToDelete || (StreamProcessorParameterToDelete = {}));
export const AgeRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const S3ObjectFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GroundTruthManifestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AssetFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AudioMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BeardFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BlackFrameFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BoundingBoxFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CoversBodyPartFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EquipmentDetectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProtectiveEquipmentBodyPartFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EmotionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LandmarkFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PoseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ImageQualityFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SmileFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ComparedFaceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const KnownGenderFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CelebrityFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EyeglassesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EyeOpenFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GenderFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MouthOpenFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MustacheFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SunglassesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FaceDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CelebrityDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CelebrityRecognitionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ComparedSourceImageFaceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ImageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CompareFacesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CompareFacesMatchFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CompareFacesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ConnectedHomeSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ConnectedHomeSettingsForUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModerationLabelFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ContentModerationDetectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OutputConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CopyProjectVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CopyProjectVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCollectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCollectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DatasetSourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDatasetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDatasetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProjectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProjectResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestingDataFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TrainingDataFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProjectVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProjectVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamProcessorDataSharingPreferenceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const KinesisVideoStreamFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamProcessorInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamProcessorNotificationChannelFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const KinesisDataStreamFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const S3DestinationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamProcessorOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PointFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegionOfInterestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FaceSearchSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamProcessorSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStreamProcessorRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStreamProcessorResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GeometryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CustomLabelFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DatasetChangesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DatasetStatsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DatasetDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DatasetLabelStatsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DatasetLabelDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DatasetMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCollectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCollectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteDatasetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteDatasetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFacesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFacesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteProjectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteProjectResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteProjectPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteProjectPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteProjectVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteProjectVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteStreamProcessorRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteStreamProcessorResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeCollectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeCollectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDatasetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeDatasetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeProjectsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeProjectsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeProjectVersionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EvaluationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ValidationDataFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestingDataResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TrainingDataResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectVersionDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeProjectVersionsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStreamProcessorRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStreamProcessorResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectCustomLabelsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectCustomLabelsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectFacesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectFacesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectionFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectLabelsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstanceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ParentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LabelFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectLabelsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HumanLoopDataAttributesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HumanLoopConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectModerationLabelsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HumanLoopActivationOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectModerationLabelsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProtectiveEquipmentSummarizationAttributesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectProtectiveEquipmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProtectiveEquipmentPersonFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProtectiveEquipmentSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectProtectiveEquipmentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectTextFiltersFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectTextRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TextDetectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectTextResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DistributeDatasetFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DistributeDatasetEntriesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DistributeDatasetEntriesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FaceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FaceDetectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FaceMatchFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FaceRecordFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetCelebrityInfoRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetCelebrityInfoResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetCelebrityRecognitionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VideoMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetCelebrityRecognitionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetContentModerationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetContentModerationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetFaceDetectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetFaceDetectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetFaceSearchRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PersonDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PersonMatchFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetFaceSearchResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetLabelDetectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LabelDetectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetLabelDetectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetPersonTrackingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PersonDetectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetPersonTrackingResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetSegmentDetectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ShotSegmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TechnicalCueSegmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SegmentDetectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SegmentTypeInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetSegmentDetectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTextDetectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TextDetectionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTextDetectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IndexFacesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UnindexedFaceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IndexFacesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const KinesisVideoStreamStartSelectorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListCollectionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListCollectionsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDatasetEntriesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDatasetEntriesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDatasetLabelsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDatasetLabelsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListFacesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListFacesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListProjectPoliciesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectPolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListProjectPoliciesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStreamProcessorsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamProcessorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStreamProcessorsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTagsForResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTagsForResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NotificationChannelFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutProjectPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutProjectPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RecognizeCelebritiesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RecognizeCelebritiesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SearchFacesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SearchFacesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SearchFacesByImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SearchFacesByImageResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VideoFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartCelebrityRecognitionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartCelebrityRecognitionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartContentModerationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartContentModerationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartFaceDetectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartFaceDetectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartFaceSearchRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartFaceSearchResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartLabelDetectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartLabelDetectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartPersonTrackingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartPersonTrackingResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartProjectVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartProjectVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartShotDetectionFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartTechnicalCueDetectionFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartSegmentDetectionFiltersFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartSegmentDetectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartSegmentDetectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamProcessingStartSelectorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamProcessingStopSelectorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartStreamProcessorRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartStreamProcessorResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartTextDetectionFiltersFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartTextDetectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartTextDetectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopProjectVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopProjectVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopStreamProcessorRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopStreamProcessorResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UntagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UntagResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDatasetEntriesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDatasetEntriesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamProcessorSettingsForUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateStreamProcessorRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateStreamProcessorResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
