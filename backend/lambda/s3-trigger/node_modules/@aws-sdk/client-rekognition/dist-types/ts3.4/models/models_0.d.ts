import {
  ExceptionOptionType as __ExceptionOptionType,
  LazyJsonString as __LazyJsonString,
} from "@aws-sdk/smithy-client";
import { RekognitionServiceException as __BaseException } from "./RekognitionServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AgeRange {
  Low?: number;
  High?: number;
}
export interface S3Object {
  Bucket?: string;
  Name?: string;
  Version?: string;
}
export interface GroundTruthManifest {
  S3Object?: S3Object;
}
export interface Asset {
  GroundTruthManifest?: GroundTruthManifest;
}
export declare enum Attribute {
  ALL = "ALL",
  DEFAULT = "DEFAULT",
}
export interface AudioMetadata {
  Codec?: string;
  DurationMillis?: number;
  SampleRate?: number;
  NumberOfChannels?: number;
}
export interface Beard {
  Value?: boolean;
  Confidence?: number;
}
export interface BlackFrame {
  MaxPixelThreshold?: number;
  MinCoveragePercentage?: number;
}
export declare enum BodyPart {
  FACE = "FACE",
  HEAD = "HEAD",
  LEFT_HAND = "LEFT_HAND",
  RIGHT_HAND = "RIGHT_HAND",
}
export interface BoundingBox {
  Width?: number;
  Height?: number;
  Left?: number;
  Top?: number;
}
export interface CoversBodyPart {
  Confidence?: number;
  Value?: boolean;
}
export declare enum ProtectiveEquipmentType {
  FACE_COVER = "FACE_COVER",
  HAND_COVER = "HAND_COVER",
  HEAD_COVER = "HEAD_COVER",
}
export interface EquipmentDetection {
  BoundingBox?: BoundingBox;
  Confidence?: number;
  Type?: ProtectiveEquipmentType | string;
  CoversBodyPart?: CoversBodyPart;
}
export interface ProtectiveEquipmentBodyPart {
  Name?: BodyPart | string;
  Confidence?: number;
  EquipmentDetections?: EquipmentDetection[];
}
export declare type EmotionName =
  | "ANGRY"
  | "CALM"
  | "CONFUSED"
  | "DISGUSTED"
  | "FEAR"
  | "HAPPY"
  | "SAD"
  | "SURPRISED"
  | "UNKNOWN";
export interface Emotion {
  Type?: EmotionName | string;
  Confidence?: number;
}
export declare enum LandmarkType {
  chinBottom = "chinBottom",
  eyeLeft = "eyeLeft",
  eyeRight = "eyeRight",
  leftEyeBrowLeft = "leftEyeBrowLeft",
  leftEyeBrowRight = "leftEyeBrowRight",
  leftEyeBrowUp = "leftEyeBrowUp",
  leftEyeDown = "leftEyeDown",
  leftEyeLeft = "leftEyeLeft",
  leftEyeRight = "leftEyeRight",
  leftEyeUp = "leftEyeUp",
  leftPupil = "leftPupil",
  midJawlineLeft = "midJawlineLeft",
  midJawlineRight = "midJawlineRight",
  mouthDown = "mouthDown",
  mouthLeft = "mouthLeft",
  mouthRight = "mouthRight",
  mouthUp = "mouthUp",
  nose = "nose",
  noseLeft = "noseLeft",
  noseRight = "noseRight",
  rightEyeBrowLeft = "rightEyeBrowLeft",
  rightEyeBrowRight = "rightEyeBrowRight",
  rightEyeBrowUp = "rightEyeBrowUp",
  rightEyeDown = "rightEyeDown",
  rightEyeLeft = "rightEyeLeft",
  rightEyeRight = "rightEyeRight",
  rightEyeUp = "rightEyeUp",
  rightPupil = "rightPupil",
  upperJawlineLeft = "upperJawlineLeft",
  upperJawlineRight = "upperJawlineRight",
}
export interface Landmark {
  Type?: LandmarkType | string;
  X?: number;
  Y?: number;
}
export interface Pose {
  Roll?: number;
  Yaw?: number;
  Pitch?: number;
}
export interface ImageQuality {
  Brightness?: number;
  Sharpness?: number;
}
export interface Smile {
  Value?: boolean;
  Confidence?: number;
}
export interface ComparedFace {
  BoundingBox?: BoundingBox;
  Confidence?: number;
  Landmarks?: Landmark[];
  Pose?: Pose;
  Quality?: ImageQuality;
  Emotions?: Emotion[];
  Smile?: Smile;
}
export declare enum KnownGenderType {
  Female = "Female",
  Male = "Male",
  Nonbinary = "Nonbinary",
  Unlisted = "Unlisted",
}
export interface KnownGender {
  Type?: KnownGenderType | string;
}
export interface Celebrity {
  Urls?: string[];
  Name?: string;
  Id?: string;
  Face?: ComparedFace;
  MatchConfidence?: number;
  KnownGender?: KnownGender;
}
export interface Eyeglasses {
  Value?: boolean;
  Confidence?: number;
}
export interface EyeOpen {
  Value?: boolean;
  Confidence?: number;
}
export declare enum GenderType {
  Female = "Female",
  Male = "Male",
}
export interface Gender {
  Value?: GenderType | string;
  Confidence?: number;
}
export interface MouthOpen {
  Value?: boolean;
  Confidence?: number;
}
export interface Mustache {
  Value?: boolean;
  Confidence?: number;
}
export interface Sunglasses {
  Value?: boolean;
  Confidence?: number;
}
export interface FaceDetail {
  BoundingBox?: BoundingBox;
  AgeRange?: AgeRange;
  Smile?: Smile;
  Eyeglasses?: Eyeglasses;
  Sunglasses?: Sunglasses;
  Gender?: Gender;
  Beard?: Beard;
  Mustache?: Mustache;
  EyesOpen?: EyeOpen;
  MouthOpen?: MouthOpen;
  Emotions?: Emotion[];
  Landmarks?: Landmark[];
  Pose?: Pose;
  Quality?: ImageQuality;
  Confidence?: number;
}
export interface CelebrityDetail {
  Urls?: string[];
  Name?: string;
  Id?: string;
  Confidence?: number;
  BoundingBox?: BoundingBox;
  Face?: FaceDetail;
  KnownGender?: KnownGender;
}
export interface CelebrityRecognition {
  Timestamp?: number;
  Celebrity?: CelebrityDetail;
}
export declare enum CelebrityRecognitionSortBy {
  ID = "ID",
  TIMESTAMP = "TIMESTAMP",
}
export interface ComparedSourceImageFace {
  BoundingBox?: BoundingBox;
  Confidence?: number;
}
export declare enum QualityFilter {
  AUTO = "AUTO",
  HIGH = "HIGH",
  LOW = "LOW",
  MEDIUM = "MEDIUM",
  NONE = "NONE",
}
export interface Image {
  Bytes?: Uint8Array;
  S3Object?: S3Object;
}
export interface CompareFacesRequest {
  SourceImage: Image | undefined;
  TargetImage: Image | undefined;
  SimilarityThreshold?: number;
  QualityFilter?: QualityFilter | string;
}
export interface CompareFacesMatch {
  Similarity?: number;
  Face?: ComparedFace;
}
export declare enum OrientationCorrection {
  ROTATE_0 = "ROTATE_0",
  ROTATE_180 = "ROTATE_180",
  ROTATE_270 = "ROTATE_270",
  ROTATE_90 = "ROTATE_90",
}
export interface CompareFacesResponse {
  SourceImageFace?: ComparedSourceImageFace;
  FaceMatches?: CompareFacesMatch[];
  UnmatchedFaces?: ComparedFace[];
  SourceImageOrientationCorrection?: OrientationCorrection | string;
  TargetImageOrientationCorrection?: OrientationCorrection | string;
}
export declare class ImageTooLargeException extends __BaseException {
  readonly name: "ImageTooLargeException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<ImageTooLargeException, __BaseException>
  );
}
export declare class InternalServerError extends __BaseException {
  readonly name: "InternalServerError";
  readonly $fault: "server";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerError, __BaseException>
  );
}
export declare class InvalidImageFormatException extends __BaseException {
  readonly name: "InvalidImageFormatException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidImageFormatException, __BaseException>
  );
}
export declare class InvalidParameterException extends __BaseException {
  readonly name: "InvalidParameterException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidParameterException, __BaseException>
  );
}
export declare class InvalidS3ObjectException extends __BaseException {
  readonly name: "InvalidS3ObjectException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidS3ObjectException, __BaseException>
  );
}
export declare class ProvisionedThroughputExceededException extends __BaseException {
  readonly name: "ProvisionedThroughputExceededException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<
      ProvisionedThroughputExceededException,
      __BaseException
    >
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "server";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface ConnectedHomeSettings {
  Labels: string[] | undefined;
  MinConfidence?: number;
}
export interface ConnectedHomeSettingsForUpdate {
  Labels?: string[];
  MinConfidence?: number;
}
export declare enum ContentClassifier {
  FREE_OF_ADULT_CONTENT = "FreeOfAdultContent",
  FREE_OF_PERSONALLY_IDENTIFIABLE_INFORMATION = "FreeOfPersonallyIdentifiableInformation",
}
export interface ModerationLabel {
  Confidence?: number;
  Name?: string;
  ParentName?: string;
}
export interface ContentModerationDetection {
  Timestamp?: number;
  ModerationLabel?: ModerationLabel;
}
export declare enum ContentModerationSortBy {
  NAME = "NAME",
  TIMESTAMP = "TIMESTAMP",
}
export interface OutputConfig {
  S3Bucket?: string;
  S3KeyPrefix?: string;
}
export interface CopyProjectVersionRequest {
  SourceProjectArn: string | undefined;
  SourceProjectVersionArn: string | undefined;
  DestinationProjectArn: string | undefined;
  VersionName: string | undefined;
  OutputConfig: OutputConfig | undefined;
  Tags?: Record<string, string>;
  KmsKeyId?: string;
}
export interface CopyProjectVersionResponse {
  ProjectVersionArn?: string;
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export interface CreateCollectionRequest {
  CollectionId: string | undefined;
  Tags?: Record<string, string>;
}
export interface CreateCollectionResponse {
  StatusCode?: number;
  CollectionArn?: string;
  FaceModelVersion?: string;
}
export declare class ResourceAlreadyExistsException extends __BaseException {
  readonly name: "ResourceAlreadyExistsException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>
  );
}
export interface DatasetSource {
  GroundTruthManifest?: GroundTruthManifest;
  DatasetArn?: string;
}
export declare enum DatasetType {
  TEST = "TEST",
  TRAIN = "TRAIN",
}
export interface CreateDatasetRequest {
  DatasetSource?: DatasetSource;
  DatasetType: DatasetType | string | undefined;
  ProjectArn: string | undefined;
}
export interface CreateDatasetResponse {
  DatasetArn?: string;
}
export interface CreateProjectRequest {
  ProjectName: string | undefined;
}
export interface CreateProjectResponse {
  ProjectArn?: string;
}
export interface TestingData {
  Assets?: Asset[];
  AutoCreate?: boolean;
}
export interface TrainingData {
  Assets?: Asset[];
}
export interface CreateProjectVersionRequest {
  ProjectArn: string | undefined;
  VersionName: string | undefined;
  OutputConfig: OutputConfig | undefined;
  TrainingData?: TrainingData;
  TestingData?: TestingData;
  Tags?: Record<string, string>;
  KmsKeyId?: string;
}
export interface CreateProjectVersionResponse {
  ProjectVersionArn?: string;
}
export interface StreamProcessorDataSharingPreference {
  OptIn: boolean | undefined;
}
export interface KinesisVideoStream {
  Arn?: string;
}
export interface StreamProcessorInput {
  KinesisVideoStream?: KinesisVideoStream;
}
export interface StreamProcessorNotificationChannel {
  SNSTopicArn: string | undefined;
}
export interface KinesisDataStream {
  Arn?: string;
}
export interface S3Destination {
  Bucket?: string;
  KeyPrefix?: string;
}
export interface StreamProcessorOutput {
  KinesisDataStream?: KinesisDataStream;
  S3Destination?: S3Destination;
}
export interface Point {
  X?: number;
  Y?: number;
}
export interface RegionOfInterest {
  BoundingBox?: BoundingBox;
  Polygon?: Point[];
}
export interface FaceSearchSettings {
  CollectionId?: string;
  FaceMatchThreshold?: number;
}
export interface StreamProcessorSettings {
  FaceSearch?: FaceSearchSettings;
  ConnectedHome?: ConnectedHomeSettings;
}
export interface CreateStreamProcessorRequest {
  Input: StreamProcessorInput | undefined;
  Output: StreamProcessorOutput | undefined;
  Name: string | undefined;
  Settings: StreamProcessorSettings | undefined;
  RoleArn: string | undefined;
  Tags?: Record<string, string>;
  NotificationChannel?: StreamProcessorNotificationChannel;
  KmsKeyId?: string;
  RegionsOfInterest?: RegionOfInterest[];
  DataSharingPreference?: StreamProcessorDataSharingPreference;
}
export interface CreateStreamProcessorResponse {
  StreamProcessorArn?: string;
}
export interface Geometry {
  BoundingBox?: BoundingBox;
  Polygon?: Point[];
}
export interface CustomLabel {
  Name?: string;
  Confidence?: number;
  Geometry?: Geometry;
}
export interface DatasetChanges {
  GroundTruth: Uint8Array | undefined;
}
export interface DatasetStats {
  LabeledEntries?: number;
  TotalEntries?: number;
  TotalLabels?: number;
  ErrorEntries?: number;
}
export declare enum DatasetStatus {
  CREATE_COMPLETE = "CREATE_COMPLETE",
  CREATE_FAILED = "CREATE_FAILED",
  CREATE_IN_PROGRESS = "CREATE_IN_PROGRESS",
  DELETE_IN_PROGRESS = "DELETE_IN_PROGRESS",
  UPDATE_COMPLETE = "UPDATE_COMPLETE",
  UPDATE_FAILED = "UPDATE_FAILED",
  UPDATE_IN_PROGRESS = "UPDATE_IN_PROGRESS",
}
export declare enum DatasetStatusMessageCode {
  CLIENT_ERROR = "CLIENT_ERROR",
  SERVICE_ERROR = "SERVICE_ERROR",
  SUCCESS = "SUCCESS",
}
export interface DatasetDescription {
  CreationTimestamp?: Date;
  LastUpdatedTimestamp?: Date;
  Status?: DatasetStatus | string;
  StatusMessage?: string;
  StatusMessageCode?: DatasetStatusMessageCode | string;
  DatasetStats?: DatasetStats;
}
export interface DatasetLabelStats {
  EntryCount?: number;
  BoundingBoxCount?: number;
}
export interface DatasetLabelDescription {
  LabelName?: string;
  LabelStats?: DatasetLabelStats;
}
export interface DatasetMetadata {
  CreationTimestamp?: Date;
  DatasetType?: DatasetType | string;
  DatasetArn?: string;
  Status?: DatasetStatus | string;
  StatusMessage?: string;
  StatusMessageCode?: DatasetStatusMessageCode | string;
}
export interface DeleteCollectionRequest {
  CollectionId: string | undefined;
}
export interface DeleteCollectionResponse {
  StatusCode?: number;
}
export interface DeleteDatasetRequest {
  DatasetArn: string | undefined;
}
export interface DeleteDatasetResponse {}
export interface DeleteFacesRequest {
  CollectionId: string | undefined;
  FaceIds: string[] | undefined;
}
export interface DeleteFacesResponse {
  DeletedFaces?: string[];
}
export interface DeleteProjectRequest {
  ProjectArn: string | undefined;
}
export declare enum ProjectStatus {
  CREATED = "CREATED",
  CREATING = "CREATING",
  DELETING = "DELETING",
}
export interface DeleteProjectResponse {
  Status?: ProjectStatus | string;
}
export interface DeleteProjectPolicyRequest {
  ProjectArn: string | undefined;
  PolicyName: string | undefined;
  PolicyRevisionId?: string;
}
export interface DeleteProjectPolicyResponse {}
export declare class InvalidPolicyRevisionIdException extends __BaseException {
  readonly name: "InvalidPolicyRevisionIdException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<
      InvalidPolicyRevisionIdException,
      __BaseException
    >
  );
}
export interface DeleteProjectVersionRequest {
  ProjectVersionArn: string | undefined;
}
export declare enum ProjectVersionStatus {
  COPYING_COMPLETED = "COPYING_COMPLETED",
  COPYING_FAILED = "COPYING_FAILED",
  COPYING_IN_PROGRESS = "COPYING_IN_PROGRESS",
  DELETING = "DELETING",
  FAILED = "FAILED",
  RUNNING = "RUNNING",
  STARTING = "STARTING",
  STOPPED = "STOPPED",
  STOPPING = "STOPPING",
  TRAINING_COMPLETED = "TRAINING_COMPLETED",
  TRAINING_FAILED = "TRAINING_FAILED",
  TRAINING_IN_PROGRESS = "TRAINING_IN_PROGRESS",
}
export interface DeleteProjectVersionResponse {
  Status?: ProjectVersionStatus | string;
}
export interface DeleteStreamProcessorRequest {
  Name: string | undefined;
}
export interface DeleteStreamProcessorResponse {}
export interface DescribeCollectionRequest {
  CollectionId: string | undefined;
}
export interface DescribeCollectionResponse {
  FaceCount?: number;
  FaceModelVersion?: string;
  CollectionARN?: string;
  CreationTimestamp?: Date;
}
export interface DescribeDatasetRequest {
  DatasetArn: string | undefined;
}
export interface DescribeDatasetResponse {
  DatasetDescription?: DatasetDescription;
}
export interface DescribeProjectsRequest {
  NextToken?: string;
  MaxResults?: number;
  ProjectNames?: string[];
}
export interface ProjectDescription {
  ProjectArn?: string;
  CreationTimestamp?: Date;
  Status?: ProjectStatus | string;
  Datasets?: DatasetMetadata[];
}
export interface DescribeProjectsResponse {
  ProjectDescriptions?: ProjectDescription[];
  NextToken?: string;
}
export declare class InvalidPaginationTokenException extends __BaseException {
  readonly name: "InvalidPaginationTokenException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<
      InvalidPaginationTokenException,
      __BaseException
    >
  );
}
export interface DescribeProjectVersionsRequest {
  ProjectArn: string | undefined;
  VersionNames?: string[];
  NextToken?: string;
  MaxResults?: number;
}
export interface Summary {
  S3Object?: S3Object;
}
export interface EvaluationResult {
  F1Score?: number;
  Summary?: Summary;
}
export interface ValidationData {
  Assets?: Asset[];
}
export interface TestingDataResult {
  Input?: TestingData;
  Output?: TestingData;
  Validation?: ValidationData;
}
export interface TrainingDataResult {
  Input?: TrainingData;
  Output?: TrainingData;
  Validation?: ValidationData;
}
export interface ProjectVersionDescription {
  ProjectVersionArn?: string;
  CreationTimestamp?: Date;
  MinInferenceUnits?: number;
  Status?: ProjectVersionStatus | string;
  StatusMessage?: string;
  BillableTrainingTimeInSeconds?: number;
  TrainingEndTimestamp?: Date;
  OutputConfig?: OutputConfig;
  TrainingDataResult?: TrainingDataResult;
  TestingDataResult?: TestingDataResult;
  EvaluationResult?: EvaluationResult;
  ManifestSummary?: GroundTruthManifest;
  KmsKeyId?: string;
  MaxInferenceUnits?: number;
  SourceProjectVersionArn?: string;
}
export interface DescribeProjectVersionsResponse {
  ProjectVersionDescriptions?: ProjectVersionDescription[];
  NextToken?: string;
}
export interface DescribeStreamProcessorRequest {
  Name: string | undefined;
}
export declare enum StreamProcessorStatus {
  FAILED = "FAILED",
  RUNNING = "RUNNING",
  STARTING = "STARTING",
  STOPPED = "STOPPED",
  STOPPING = "STOPPING",
  UPDATING = "UPDATING",
}
export interface DescribeStreamProcessorResponse {
  Name?: string;
  StreamProcessorArn?: string;
  Status?: StreamProcessorStatus | string;
  StatusMessage?: string;
  CreationTimestamp?: Date;
  LastUpdateTimestamp?: Date;
  Input?: StreamProcessorInput;
  Output?: StreamProcessorOutput;
  RoleArn?: string;
  Settings?: StreamProcessorSettings;
  NotificationChannel?: StreamProcessorNotificationChannel;
  KmsKeyId?: string;
  RegionsOfInterest?: RegionOfInterest[];
  DataSharingPreference?: StreamProcessorDataSharingPreference;
}
export interface DetectCustomLabelsRequest {
  ProjectVersionArn: string | undefined;
  Image: Image | undefined;
  MaxResults?: number;
  MinConfidence?: number;
}
export interface DetectCustomLabelsResponse {
  CustomLabels?: CustomLabel[];
}
export declare class ResourceNotReadyException extends __BaseException {
  readonly name: "ResourceNotReadyException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotReadyException, __BaseException>
  );
}
export interface DetectFacesRequest {
  Image: Image | undefined;
  Attributes?: (Attribute | string)[];
}
export interface DetectFacesResponse {
  FaceDetails?: FaceDetail[];
  OrientationCorrection?: OrientationCorrection | string;
}
export interface DetectionFilter {
  MinConfidence?: number;
  MinBoundingBoxHeight?: number;
  MinBoundingBoxWidth?: number;
}
export interface DetectLabelsRequest {
  Image: Image | undefined;
  MaxLabels?: number;
  MinConfidence?: number;
}
export interface Instance {
  BoundingBox?: BoundingBox;
  Confidence?: number;
}
export interface Parent {
  Name?: string;
}
export interface Label {
  Name?: string;
  Confidence?: number;
  Instances?: Instance[];
  Parents?: Parent[];
}
export interface DetectLabelsResponse {
  Labels?: Label[];
  OrientationCorrection?: OrientationCorrection | string;
  LabelModelVersion?: string;
}
export interface HumanLoopDataAttributes {
  ContentClassifiers?: (ContentClassifier | string)[];
}
export interface HumanLoopConfig {
  HumanLoopName: string | undefined;
  FlowDefinitionArn: string | undefined;
  DataAttributes?: HumanLoopDataAttributes;
}
export interface DetectModerationLabelsRequest {
  Image: Image | undefined;
  MinConfidence?: number;
  HumanLoopConfig?: HumanLoopConfig;
}
export interface HumanLoopActivationOutput {
  HumanLoopArn?: string;
  HumanLoopActivationReasons?: string[];
  HumanLoopActivationConditionsEvaluationResults?: __LazyJsonString | string;
}
export interface DetectModerationLabelsResponse {
  ModerationLabels?: ModerationLabel[];
  ModerationModelVersion?: string;
  HumanLoopActivationOutput?: HumanLoopActivationOutput;
}
export declare class HumanLoopQuotaExceededException extends __BaseException {
  readonly name: "HumanLoopQuotaExceededException";
  readonly $fault: "client";
  ResourceType?: string;
  QuotaCode?: string;
  ServiceCode?: string;
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<
      HumanLoopQuotaExceededException,
      __BaseException
    >
  );
}
export interface ProtectiveEquipmentSummarizationAttributes {
  MinConfidence: number | undefined;
  RequiredEquipmentTypes: (ProtectiveEquipmentType | string)[] | undefined;
}
export interface DetectProtectiveEquipmentRequest {
  Image: Image | undefined;
  SummarizationAttributes?: ProtectiveEquipmentSummarizationAttributes;
}
export interface ProtectiveEquipmentPerson {
  BodyParts?: ProtectiveEquipmentBodyPart[];
  BoundingBox?: BoundingBox;
  Confidence?: number;
  Id?: number;
}
export interface ProtectiveEquipmentSummary {
  PersonsWithRequiredEquipment?: number[];
  PersonsWithoutRequiredEquipment?: number[];
  PersonsIndeterminate?: number[];
}
export interface DetectProtectiveEquipmentResponse {
  ProtectiveEquipmentModelVersion?: string;
  Persons?: ProtectiveEquipmentPerson[];
  Summary?: ProtectiveEquipmentSummary;
}
export interface DetectTextFilters {
  WordFilter?: DetectionFilter;
  RegionsOfInterest?: RegionOfInterest[];
}
export interface DetectTextRequest {
  Image: Image | undefined;
  Filters?: DetectTextFilters;
}
export declare enum TextTypes {
  LINE = "LINE",
  WORD = "WORD",
}
export interface TextDetection {
  DetectedText?: string;
  Type?: TextTypes | string;
  Id?: number;
  ParentId?: number;
  Confidence?: number;
  Geometry?: Geometry;
}
export interface DetectTextResponse {
  TextDetections?: TextDetection[];
  TextModelVersion?: string;
}
export interface DistributeDataset {
  Arn: string | undefined;
}
export interface DistributeDatasetEntriesRequest {
  Datasets: DistributeDataset[] | undefined;
}
export interface DistributeDatasetEntriesResponse {}
export interface Face {
  FaceId?: string;
  BoundingBox?: BoundingBox;
  ImageId?: string;
  ExternalImageId?: string;
  Confidence?: number;
  IndexFacesModelVersion?: string;
}
export declare enum FaceAttributes {
  ALL = "ALL",
  DEFAULT = "DEFAULT",
}
export interface FaceDetection {
  Timestamp?: number;
  Face?: FaceDetail;
}
export interface FaceMatch {
  Similarity?: number;
  Face?: Face;
}
export interface FaceRecord {
  Face?: Face;
  FaceDetail?: FaceDetail;
}
export declare enum FaceSearchSortBy {
  INDEX = "INDEX",
  TIMESTAMP = "TIMESTAMP",
}
export interface GetCelebrityInfoRequest {
  Id: string | undefined;
}
export interface GetCelebrityInfoResponse {
  Urls?: string[];
  Name?: string;
  KnownGender?: KnownGender;
}
export interface GetCelebrityRecognitionRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  SortBy?: CelebrityRecognitionSortBy | string;
}
export declare enum VideoJobStatus {
  FAILED = "FAILED",
  IN_PROGRESS = "IN_PROGRESS",
  SUCCEEDED = "SUCCEEDED",
}
export declare enum VideoColorRange {
  FULL = "FULL",
  LIMITED = "LIMITED",
}
export interface VideoMetadata {
  Codec?: string;
  DurationMillis?: number;
  Format?: string;
  FrameRate?: number;
  FrameHeight?: number;
  FrameWidth?: number;
  ColorRange?: VideoColorRange | string;
}
export interface GetCelebrityRecognitionResponse {
  JobStatus?: VideoJobStatus | string;
  StatusMessage?: string;
  VideoMetadata?: VideoMetadata;
  NextToken?: string;
  Celebrities?: CelebrityRecognition[];
}
export interface GetContentModerationRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  SortBy?: ContentModerationSortBy | string;
}
export interface GetContentModerationResponse {
  JobStatus?: VideoJobStatus | string;
  StatusMessage?: string;
  VideoMetadata?: VideoMetadata;
  ModerationLabels?: ContentModerationDetection[];
  NextToken?: string;
  ModerationModelVersion?: string;
}
export interface GetFaceDetectionRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface GetFaceDetectionResponse {
  JobStatus?: VideoJobStatus | string;
  StatusMessage?: string;
  VideoMetadata?: VideoMetadata;
  NextToken?: string;
  Faces?: FaceDetection[];
}
export interface GetFaceSearchRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  SortBy?: FaceSearchSortBy | string;
}
export interface PersonDetail {
  Index?: number;
  BoundingBox?: BoundingBox;
  Face?: FaceDetail;
}
export interface PersonMatch {
  Timestamp?: number;
  Person?: PersonDetail;
  FaceMatches?: FaceMatch[];
}
export interface GetFaceSearchResponse {
  JobStatus?: VideoJobStatus | string;
  StatusMessage?: string;
  NextToken?: string;
  VideoMetadata?: VideoMetadata;
  Persons?: PersonMatch[];
}
export declare enum LabelDetectionSortBy {
  NAME = "NAME",
  TIMESTAMP = "TIMESTAMP",
}
export interface GetLabelDetectionRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  SortBy?: LabelDetectionSortBy | string;
}
export interface LabelDetection {
  Timestamp?: number;
  Label?: Label;
}
export interface GetLabelDetectionResponse {
  JobStatus?: VideoJobStatus | string;
  StatusMessage?: string;
  VideoMetadata?: VideoMetadata;
  NextToken?: string;
  Labels?: LabelDetection[];
  LabelModelVersion?: string;
}
export declare enum PersonTrackingSortBy {
  INDEX = "INDEX",
  TIMESTAMP = "TIMESTAMP",
}
export interface GetPersonTrackingRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  SortBy?: PersonTrackingSortBy | string;
}
export interface PersonDetection {
  Timestamp?: number;
  Person?: PersonDetail;
}
export interface GetPersonTrackingResponse {
  JobStatus?: VideoJobStatus | string;
  StatusMessage?: string;
  VideoMetadata?: VideoMetadata;
  NextToken?: string;
  Persons?: PersonDetection[];
}
export interface GetSegmentDetectionRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ShotSegment {
  Index?: number;
  Confidence?: number;
}
export declare enum TechnicalCueType {
  BLACK_FRAMES = "BlackFrames",
  COLOR_BARS = "ColorBars",
  CONTENT = "Content",
  END_CREDITS = "EndCredits",
  OPENING_CREDITS = "OpeningCredits",
  SLATE = "Slate",
  STUDIO_LOGO = "StudioLogo",
}
export interface TechnicalCueSegment {
  Type?: TechnicalCueType | string;
  Confidence?: number;
}
export declare enum SegmentType {
  SHOT = "SHOT",
  TECHNICAL_CUE = "TECHNICAL_CUE",
}
export interface SegmentDetection {
  Type?: SegmentType | string;
  StartTimestampMillis?: number;
  EndTimestampMillis?: number;
  DurationMillis?: number;
  StartTimecodeSMPTE?: string;
  EndTimecodeSMPTE?: string;
  DurationSMPTE?: string;
  TechnicalCueSegment?: TechnicalCueSegment;
  ShotSegment?: ShotSegment;
  StartFrameNumber?: number;
  EndFrameNumber?: number;
  DurationFrames?: number;
}
export interface SegmentTypeInfo {
  Type?: SegmentType | string;
  ModelVersion?: string;
}
export interface GetSegmentDetectionResponse {
  JobStatus?: VideoJobStatus | string;
  StatusMessage?: string;
  VideoMetadata?: VideoMetadata[];
  AudioMetadata?: AudioMetadata[];
  NextToken?: string;
  Segments?: SegmentDetection[];
  SelectedSegmentTypes?: SegmentTypeInfo[];
}
export interface GetTextDetectionRequest {
  JobId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface TextDetectionResult {
  Timestamp?: number;
  TextDetection?: TextDetection;
}
export interface GetTextDetectionResponse {
  JobStatus?: VideoJobStatus | string;
  StatusMessage?: string;
  VideoMetadata?: VideoMetadata;
  TextDetections?: TextDetectionResult[];
  NextToken?: string;
  TextModelVersion?: string;
}
export declare class IdempotentParameterMismatchException extends __BaseException {
  readonly name: "IdempotentParameterMismatchException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<
      IdempotentParameterMismatchException,
      __BaseException
    >
  );
}
export interface IndexFacesRequest {
  CollectionId: string | undefined;
  Image: Image | undefined;
  ExternalImageId?: string;
  DetectionAttributes?: (Attribute | string)[];
  MaxFaces?: number;
  QualityFilter?: QualityFilter | string;
}
export declare enum Reason {
  EXCEEDS_MAX_FACES = "EXCEEDS_MAX_FACES",
  EXTREME_POSE = "EXTREME_POSE",
  LOW_BRIGHTNESS = "LOW_BRIGHTNESS",
  LOW_CONFIDENCE = "LOW_CONFIDENCE",
  LOW_FACE_QUALITY = "LOW_FACE_QUALITY",
  LOW_SHARPNESS = "LOW_SHARPNESS",
  SMALL_BOUNDING_BOX = "SMALL_BOUNDING_BOX",
}
export interface UnindexedFace {
  Reasons?: (Reason | string)[];
  FaceDetail?: FaceDetail;
}
export interface IndexFacesResponse {
  FaceRecords?: FaceRecord[];
  OrientationCorrection?: OrientationCorrection | string;
  FaceModelVersion?: string;
  UnindexedFaces?: UnindexedFace[];
}
export interface KinesisVideoStreamStartSelector {
  ProducerTimestamp?: number;
  FragmentNumber?: string;
}
export interface ListCollectionsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListCollectionsResponse {
  CollectionIds?: string[];
  NextToken?: string;
  FaceModelVersions?: string[];
}
export interface ListDatasetEntriesRequest {
  DatasetArn: string | undefined;
  ContainsLabels?: string[];
  Labeled?: boolean;
  SourceRefContains?: string;
  HasErrors?: boolean;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDatasetEntriesResponse {
  DatasetEntries?: string[];
  NextToken?: string;
}
export interface ListDatasetLabelsRequest {
  DatasetArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDatasetLabelsResponse {
  DatasetLabelDescriptions?: DatasetLabelDescription[];
  NextToken?: string;
}
export interface ListFacesRequest {
  CollectionId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListFacesResponse {
  Faces?: Face[];
  NextToken?: string;
  FaceModelVersion?: string;
}
export interface ListProjectPoliciesRequest {
  ProjectArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ProjectPolicy {
  ProjectArn?: string;
  PolicyName?: string;
  PolicyRevisionId?: string;
  PolicyDocument?: string;
  CreationTimestamp?: Date;
  LastUpdatedTimestamp?: Date;
}
export interface ListProjectPoliciesResponse {
  ProjectPolicies?: ProjectPolicy[];
  NextToken?: string;
}
export interface ListStreamProcessorsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface StreamProcessor {
  Name?: string;
  Status?: StreamProcessorStatus | string;
}
export interface ListStreamProcessorsResponse {
  NextToken?: string;
  StreamProcessors?: StreamProcessor[];
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export declare class MalformedPolicyDocumentException extends __BaseException {
  readonly name: "MalformedPolicyDocumentException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<
      MalformedPolicyDocumentException,
      __BaseException
    >
  );
}
export interface NotificationChannel {
  SNSTopicArn: string | undefined;
  RoleArn: string | undefined;
}
export interface PutProjectPolicyRequest {
  ProjectArn: string | undefined;
  PolicyName: string | undefined;
  PolicyRevisionId?: string;
  PolicyDocument: string | undefined;
}
export interface PutProjectPolicyResponse {
  PolicyRevisionId?: string;
}
export interface RecognizeCelebritiesRequest {
  Image: Image | undefined;
}
export interface RecognizeCelebritiesResponse {
  CelebrityFaces?: Celebrity[];
  UnrecognizedFaces?: ComparedFace[];
  OrientationCorrection?: OrientationCorrection | string;
}
export interface SearchFacesRequest {
  CollectionId: string | undefined;
  FaceId: string | undefined;
  MaxFaces?: number;
  FaceMatchThreshold?: number;
}
export interface SearchFacesResponse {
  SearchedFaceId?: string;
  FaceMatches?: FaceMatch[];
  FaceModelVersion?: string;
}
export interface SearchFacesByImageRequest {
  CollectionId: string | undefined;
  Image: Image | undefined;
  MaxFaces?: number;
  FaceMatchThreshold?: number;
  QualityFilter?: QualityFilter | string;
}
export interface SearchFacesByImageResponse {
  SearchedFaceBoundingBox?: BoundingBox;
  SearchedFaceConfidence?: number;
  FaceMatches?: FaceMatch[];
  FaceModelVersion?: string;
}
export interface Video {
  S3Object?: S3Object;
}
export interface StartCelebrityRecognitionRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
}
export interface StartCelebrityRecognitionResponse {
  JobId?: string;
}
export declare class VideoTooLargeException extends __BaseException {
  readonly name: "VideoTooLargeException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  Logref?: string;
  constructor(
    opts: __ExceptionOptionType<VideoTooLargeException, __BaseException>
  );
}
export interface StartContentModerationRequest {
  Video: Video | undefined;
  MinConfidence?: number;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
}
export interface StartContentModerationResponse {
  JobId?: string;
}
export interface StartFaceDetectionRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  FaceAttributes?: FaceAttributes | string;
  JobTag?: string;
}
export interface StartFaceDetectionResponse {
  JobId?: string;
}
export interface StartFaceSearchRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  FaceMatchThreshold?: number;
  CollectionId: string | undefined;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
}
export interface StartFaceSearchResponse {
  JobId?: string;
}
export interface StartLabelDetectionRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  MinConfidence?: number;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
}
export interface StartLabelDetectionResponse {
  JobId?: string;
}
export interface StartPersonTrackingRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
}
export interface StartPersonTrackingResponse {
  JobId?: string;
}
export interface StartProjectVersionRequest {
  ProjectVersionArn: string | undefined;
  MinInferenceUnits: number | undefined;
  MaxInferenceUnits?: number;
}
export interface StartProjectVersionResponse {
  Status?: ProjectVersionStatus | string;
}
export interface StartShotDetectionFilter {
  MinSegmentConfidence?: number;
}
export interface StartTechnicalCueDetectionFilter {
  MinSegmentConfidence?: number;
  BlackFrame?: BlackFrame;
}
export interface StartSegmentDetectionFilters {
  TechnicalCueFilter?: StartTechnicalCueDetectionFilter;
  ShotFilter?: StartShotDetectionFilter;
}
export interface StartSegmentDetectionRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
  Filters?: StartSegmentDetectionFilters;
  SegmentTypes: (SegmentType | string)[] | undefined;
}
export interface StartSegmentDetectionResponse {
  JobId?: string;
}
export interface StreamProcessingStartSelector {
  KVSStreamStartSelector?: KinesisVideoStreamStartSelector;
}
export interface StreamProcessingStopSelector {
  MaxDurationInSeconds?: number;
}
export interface StartStreamProcessorRequest {
  Name: string | undefined;
  StartSelector?: StreamProcessingStartSelector;
  StopSelector?: StreamProcessingStopSelector;
}
export interface StartStreamProcessorResponse {
  SessionId?: string;
}
export interface StartTextDetectionFilters {
  WordFilter?: DetectionFilter;
  RegionsOfInterest?: RegionOfInterest[];
}
export interface StartTextDetectionRequest {
  Video: Video | undefined;
  ClientRequestToken?: string;
  NotificationChannel?: NotificationChannel;
  JobTag?: string;
  Filters?: StartTextDetectionFilters;
}
export interface StartTextDetectionResponse {
  JobId?: string;
}
export interface StopProjectVersionRequest {
  ProjectVersionArn: string | undefined;
}
export interface StopProjectVersionResponse {
  Status?: ProjectVersionStatus | string;
}
export interface StopStreamProcessorRequest {
  Name: string | undefined;
}
export interface StopStreamProcessorResponse {}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateDatasetEntriesRequest {
  DatasetArn: string | undefined;
  Changes: DatasetChanges | undefined;
}
export interface UpdateDatasetEntriesResponse {}
export declare enum StreamProcessorParameterToDelete {
  ConnectedHomeMinConfidence = "ConnectedHomeMinConfidence",
  RegionsOfInterest = "RegionsOfInterest",
}
export interface StreamProcessorSettingsForUpdate {
  ConnectedHomeForUpdate?: ConnectedHomeSettingsForUpdate;
}
export interface UpdateStreamProcessorRequest {
  Name: string | undefined;
  SettingsForUpdate?: StreamProcessorSettingsForUpdate;
  RegionsOfInterestForUpdate?: RegionOfInterest[];
  DataSharingPreferenceForUpdate?: StreamProcessorDataSharingPreference;
  ParametersToDelete?: (StreamProcessorParameterToDelete | string)[];
}
export interface UpdateStreamProcessorResponse {}
export declare const AgeRangeFilterSensitiveLog: (obj: AgeRange) => any;
export declare const S3ObjectFilterSensitiveLog: (obj: S3Object) => any;
export declare const GroundTruthManifestFilterSensitiveLog: (
  obj: GroundTruthManifest
) => any;
export declare const AssetFilterSensitiveLog: (obj: Asset) => any;
export declare const AudioMetadataFilterSensitiveLog: (
  obj: AudioMetadata
) => any;
export declare const BeardFilterSensitiveLog: (obj: Beard) => any;
export declare const BlackFrameFilterSensitiveLog: (obj: BlackFrame) => any;
export declare const BoundingBoxFilterSensitiveLog: (obj: BoundingBox) => any;
export declare const CoversBodyPartFilterSensitiveLog: (
  obj: CoversBodyPart
) => any;
export declare const EquipmentDetectionFilterSensitiveLog: (
  obj: EquipmentDetection
) => any;
export declare const ProtectiveEquipmentBodyPartFilterSensitiveLog: (
  obj: ProtectiveEquipmentBodyPart
) => any;
export declare const EmotionFilterSensitiveLog: (obj: Emotion) => any;
export declare const LandmarkFilterSensitiveLog: (obj: Landmark) => any;
export declare const PoseFilterSensitiveLog: (obj: Pose) => any;
export declare const ImageQualityFilterSensitiveLog: (obj: ImageQuality) => any;
export declare const SmileFilterSensitiveLog: (obj: Smile) => any;
export declare const ComparedFaceFilterSensitiveLog: (obj: ComparedFace) => any;
export declare const KnownGenderFilterSensitiveLog: (obj: KnownGender) => any;
export declare const CelebrityFilterSensitiveLog: (obj: Celebrity) => any;
export declare const EyeglassesFilterSensitiveLog: (obj: Eyeglasses) => any;
export declare const EyeOpenFilterSensitiveLog: (obj: EyeOpen) => any;
export declare const GenderFilterSensitiveLog: (obj: Gender) => any;
export declare const MouthOpenFilterSensitiveLog: (obj: MouthOpen) => any;
export declare const MustacheFilterSensitiveLog: (obj: Mustache) => any;
export declare const SunglassesFilterSensitiveLog: (obj: Sunglasses) => any;
export declare const FaceDetailFilterSensitiveLog: (obj: FaceDetail) => any;
export declare const CelebrityDetailFilterSensitiveLog: (
  obj: CelebrityDetail
) => any;
export declare const CelebrityRecognitionFilterSensitiveLog: (
  obj: CelebrityRecognition
) => any;
export declare const ComparedSourceImageFaceFilterSensitiveLog: (
  obj: ComparedSourceImageFace
) => any;
export declare const ImageFilterSensitiveLog: (obj: Image) => any;
export declare const CompareFacesRequestFilterSensitiveLog: (
  obj: CompareFacesRequest
) => any;
export declare const CompareFacesMatchFilterSensitiveLog: (
  obj: CompareFacesMatch
) => any;
export declare const CompareFacesResponseFilterSensitiveLog: (
  obj: CompareFacesResponse
) => any;
export declare const ConnectedHomeSettingsFilterSensitiveLog: (
  obj: ConnectedHomeSettings
) => any;
export declare const ConnectedHomeSettingsForUpdateFilterSensitiveLog: (
  obj: ConnectedHomeSettingsForUpdate
) => any;
export declare const ModerationLabelFilterSensitiveLog: (
  obj: ModerationLabel
) => any;
export declare const ContentModerationDetectionFilterSensitiveLog: (
  obj: ContentModerationDetection
) => any;
export declare const OutputConfigFilterSensitiveLog: (obj: OutputConfig) => any;
export declare const CopyProjectVersionRequestFilterSensitiveLog: (
  obj: CopyProjectVersionRequest
) => any;
export declare const CopyProjectVersionResponseFilterSensitiveLog: (
  obj: CopyProjectVersionResponse
) => any;
export declare const CreateCollectionRequestFilterSensitiveLog: (
  obj: CreateCollectionRequest
) => any;
export declare const CreateCollectionResponseFilterSensitiveLog: (
  obj: CreateCollectionResponse
) => any;
export declare const DatasetSourceFilterSensitiveLog: (
  obj: DatasetSource
) => any;
export declare const CreateDatasetRequestFilterSensitiveLog: (
  obj: CreateDatasetRequest
) => any;
export declare const CreateDatasetResponseFilterSensitiveLog: (
  obj: CreateDatasetResponse
) => any;
export declare const CreateProjectRequestFilterSensitiveLog: (
  obj: CreateProjectRequest
) => any;
export declare const CreateProjectResponseFilterSensitiveLog: (
  obj: CreateProjectResponse
) => any;
export declare const TestingDataFilterSensitiveLog: (obj: TestingData) => any;
export declare const TrainingDataFilterSensitiveLog: (obj: TrainingData) => any;
export declare const CreateProjectVersionRequestFilterSensitiveLog: (
  obj: CreateProjectVersionRequest
) => any;
export declare const CreateProjectVersionResponseFilterSensitiveLog: (
  obj: CreateProjectVersionResponse
) => any;
export declare const StreamProcessorDataSharingPreferenceFilterSensitiveLog: (
  obj: StreamProcessorDataSharingPreference
) => any;
export declare const KinesisVideoStreamFilterSensitiveLog: (
  obj: KinesisVideoStream
) => any;
export declare const StreamProcessorInputFilterSensitiveLog: (
  obj: StreamProcessorInput
) => any;
export declare const StreamProcessorNotificationChannelFilterSensitiveLog: (
  obj: StreamProcessorNotificationChannel
) => any;
export declare const KinesisDataStreamFilterSensitiveLog: (
  obj: KinesisDataStream
) => any;
export declare const S3DestinationFilterSensitiveLog: (
  obj: S3Destination
) => any;
export declare const StreamProcessorOutputFilterSensitiveLog: (
  obj: StreamProcessorOutput
) => any;
export declare const PointFilterSensitiveLog: (obj: Point) => any;
export declare const RegionOfInterestFilterSensitiveLog: (
  obj: RegionOfInterest
) => any;
export declare const FaceSearchSettingsFilterSensitiveLog: (
  obj: FaceSearchSettings
) => any;
export declare const StreamProcessorSettingsFilterSensitiveLog: (
  obj: StreamProcessorSettings
) => any;
export declare const CreateStreamProcessorRequestFilterSensitiveLog: (
  obj: CreateStreamProcessorRequest
) => any;
export declare const CreateStreamProcessorResponseFilterSensitiveLog: (
  obj: CreateStreamProcessorResponse
) => any;
export declare const GeometryFilterSensitiveLog: (obj: Geometry) => any;
export declare const CustomLabelFilterSensitiveLog: (obj: CustomLabel) => any;
export declare const DatasetChangesFilterSensitiveLog: (
  obj: DatasetChanges
) => any;
export declare const DatasetStatsFilterSensitiveLog: (obj: DatasetStats) => any;
export declare const DatasetDescriptionFilterSensitiveLog: (
  obj: DatasetDescription
) => any;
export declare const DatasetLabelStatsFilterSensitiveLog: (
  obj: DatasetLabelStats
) => any;
export declare const DatasetLabelDescriptionFilterSensitiveLog: (
  obj: DatasetLabelDescription
) => any;
export declare const DatasetMetadataFilterSensitiveLog: (
  obj: DatasetMetadata
) => any;
export declare const DeleteCollectionRequestFilterSensitiveLog: (
  obj: DeleteCollectionRequest
) => any;
export declare const DeleteCollectionResponseFilterSensitiveLog: (
  obj: DeleteCollectionResponse
) => any;
export declare const DeleteDatasetRequestFilterSensitiveLog: (
  obj: DeleteDatasetRequest
) => any;
export declare const DeleteDatasetResponseFilterSensitiveLog: (
  obj: DeleteDatasetResponse
) => any;
export declare const DeleteFacesRequestFilterSensitiveLog: (
  obj: DeleteFacesRequest
) => any;
export declare const DeleteFacesResponseFilterSensitiveLog: (
  obj: DeleteFacesResponse
) => any;
export declare const DeleteProjectRequestFilterSensitiveLog: (
  obj: DeleteProjectRequest
) => any;
export declare const DeleteProjectResponseFilterSensitiveLog: (
  obj: DeleteProjectResponse
) => any;
export declare const DeleteProjectPolicyRequestFilterSensitiveLog: (
  obj: DeleteProjectPolicyRequest
) => any;
export declare const DeleteProjectPolicyResponseFilterSensitiveLog: (
  obj: DeleteProjectPolicyResponse
) => any;
export declare const DeleteProjectVersionRequestFilterSensitiveLog: (
  obj: DeleteProjectVersionRequest
) => any;
export declare const DeleteProjectVersionResponseFilterSensitiveLog: (
  obj: DeleteProjectVersionResponse
) => any;
export declare const DeleteStreamProcessorRequestFilterSensitiveLog: (
  obj: DeleteStreamProcessorRequest
) => any;
export declare const DeleteStreamProcessorResponseFilterSensitiveLog: (
  obj: DeleteStreamProcessorResponse
) => any;
export declare const DescribeCollectionRequestFilterSensitiveLog: (
  obj: DescribeCollectionRequest
) => any;
export declare const DescribeCollectionResponseFilterSensitiveLog: (
  obj: DescribeCollectionResponse
) => any;
export declare const DescribeDatasetRequestFilterSensitiveLog: (
  obj: DescribeDatasetRequest
) => any;
export declare const DescribeDatasetResponseFilterSensitiveLog: (
  obj: DescribeDatasetResponse
) => any;
export declare const DescribeProjectsRequestFilterSensitiveLog: (
  obj: DescribeProjectsRequest
) => any;
export declare const ProjectDescriptionFilterSensitiveLog: (
  obj: ProjectDescription
) => any;
export declare const DescribeProjectsResponseFilterSensitiveLog: (
  obj: DescribeProjectsResponse
) => any;
export declare const DescribeProjectVersionsRequestFilterSensitiveLog: (
  obj: DescribeProjectVersionsRequest
) => any;
export declare const SummaryFilterSensitiveLog: (obj: Summary) => any;
export declare const EvaluationResultFilterSensitiveLog: (
  obj: EvaluationResult
) => any;
export declare const ValidationDataFilterSensitiveLog: (
  obj: ValidationData
) => any;
export declare const TestingDataResultFilterSensitiveLog: (
  obj: TestingDataResult
) => any;
export declare const TrainingDataResultFilterSensitiveLog: (
  obj: TrainingDataResult
) => any;
export declare const ProjectVersionDescriptionFilterSensitiveLog: (
  obj: ProjectVersionDescription
) => any;
export declare const DescribeProjectVersionsResponseFilterSensitiveLog: (
  obj: DescribeProjectVersionsResponse
) => any;
export declare const DescribeStreamProcessorRequestFilterSensitiveLog: (
  obj: DescribeStreamProcessorRequest
) => any;
export declare const DescribeStreamProcessorResponseFilterSensitiveLog: (
  obj: DescribeStreamProcessorResponse
) => any;
export declare const DetectCustomLabelsRequestFilterSensitiveLog: (
  obj: DetectCustomLabelsRequest
) => any;
export declare const DetectCustomLabelsResponseFilterSensitiveLog: (
  obj: DetectCustomLabelsResponse
) => any;
export declare const DetectFacesRequestFilterSensitiveLog: (
  obj: DetectFacesRequest
) => any;
export declare const DetectFacesResponseFilterSensitiveLog: (
  obj: DetectFacesResponse
) => any;
export declare const DetectionFilterFilterSensitiveLog: (
  obj: DetectionFilter
) => any;
export declare const DetectLabelsRequestFilterSensitiveLog: (
  obj: DetectLabelsRequest
) => any;
export declare const InstanceFilterSensitiveLog: (obj: Instance) => any;
export declare const ParentFilterSensitiveLog: (obj: Parent) => any;
export declare const LabelFilterSensitiveLog: (obj: Label) => any;
export declare const DetectLabelsResponseFilterSensitiveLog: (
  obj: DetectLabelsResponse
) => any;
export declare const HumanLoopDataAttributesFilterSensitiveLog: (
  obj: HumanLoopDataAttributes
) => any;
export declare const HumanLoopConfigFilterSensitiveLog: (
  obj: HumanLoopConfig
) => any;
export declare const DetectModerationLabelsRequestFilterSensitiveLog: (
  obj: DetectModerationLabelsRequest
) => any;
export declare const HumanLoopActivationOutputFilterSensitiveLog: (
  obj: HumanLoopActivationOutput
) => any;
export declare const DetectModerationLabelsResponseFilterSensitiveLog: (
  obj: DetectModerationLabelsResponse
) => any;
export declare const ProtectiveEquipmentSummarizationAttributesFilterSensitiveLog: (
  obj: ProtectiveEquipmentSummarizationAttributes
) => any;
export declare const DetectProtectiveEquipmentRequestFilterSensitiveLog: (
  obj: DetectProtectiveEquipmentRequest
) => any;
export declare const ProtectiveEquipmentPersonFilterSensitiveLog: (
  obj: ProtectiveEquipmentPerson
) => any;
export declare const ProtectiveEquipmentSummaryFilterSensitiveLog: (
  obj: ProtectiveEquipmentSummary
) => any;
export declare const DetectProtectiveEquipmentResponseFilterSensitiveLog: (
  obj: DetectProtectiveEquipmentResponse
) => any;
export declare const DetectTextFiltersFilterSensitiveLog: (
  obj: DetectTextFilters
) => any;
export declare const DetectTextRequestFilterSensitiveLog: (
  obj: DetectTextRequest
) => any;
export declare const TextDetectionFilterSensitiveLog: (
  obj: TextDetection
) => any;
export declare const DetectTextResponseFilterSensitiveLog: (
  obj: DetectTextResponse
) => any;
export declare const DistributeDatasetFilterSensitiveLog: (
  obj: DistributeDataset
) => any;
export declare const DistributeDatasetEntriesRequestFilterSensitiveLog: (
  obj: DistributeDatasetEntriesRequest
) => any;
export declare const DistributeDatasetEntriesResponseFilterSensitiveLog: (
  obj: DistributeDatasetEntriesResponse
) => any;
export declare const FaceFilterSensitiveLog: (obj: Face) => any;
export declare const FaceDetectionFilterSensitiveLog: (
  obj: FaceDetection
) => any;
export declare const FaceMatchFilterSensitiveLog: (obj: FaceMatch) => any;
export declare const FaceRecordFilterSensitiveLog: (obj: FaceRecord) => any;
export declare const GetCelebrityInfoRequestFilterSensitiveLog: (
  obj: GetCelebrityInfoRequest
) => any;
export declare const GetCelebrityInfoResponseFilterSensitiveLog: (
  obj: GetCelebrityInfoResponse
) => any;
export declare const GetCelebrityRecognitionRequestFilterSensitiveLog: (
  obj: GetCelebrityRecognitionRequest
) => any;
export declare const VideoMetadataFilterSensitiveLog: (
  obj: VideoMetadata
) => any;
export declare const GetCelebrityRecognitionResponseFilterSensitiveLog: (
  obj: GetCelebrityRecognitionResponse
) => any;
export declare const GetContentModerationRequestFilterSensitiveLog: (
  obj: GetContentModerationRequest
) => any;
export declare const GetContentModerationResponseFilterSensitiveLog: (
  obj: GetContentModerationResponse
) => any;
export declare const GetFaceDetectionRequestFilterSensitiveLog: (
  obj: GetFaceDetectionRequest
) => any;
export declare const GetFaceDetectionResponseFilterSensitiveLog: (
  obj: GetFaceDetectionResponse
) => any;
export declare const GetFaceSearchRequestFilterSensitiveLog: (
  obj: GetFaceSearchRequest
) => any;
export declare const PersonDetailFilterSensitiveLog: (obj: PersonDetail) => any;
export declare const PersonMatchFilterSensitiveLog: (obj: PersonMatch) => any;
export declare const GetFaceSearchResponseFilterSensitiveLog: (
  obj: GetFaceSearchResponse
) => any;
export declare const GetLabelDetectionRequestFilterSensitiveLog: (
  obj: GetLabelDetectionRequest
) => any;
export declare const LabelDetectionFilterSensitiveLog: (
  obj: LabelDetection
) => any;
export declare const GetLabelDetectionResponseFilterSensitiveLog: (
  obj: GetLabelDetectionResponse
) => any;
export declare const GetPersonTrackingRequestFilterSensitiveLog: (
  obj: GetPersonTrackingRequest
) => any;
export declare const PersonDetectionFilterSensitiveLog: (
  obj: PersonDetection
) => any;
export declare const GetPersonTrackingResponseFilterSensitiveLog: (
  obj: GetPersonTrackingResponse
) => any;
export declare const GetSegmentDetectionRequestFilterSensitiveLog: (
  obj: GetSegmentDetectionRequest
) => any;
export declare const ShotSegmentFilterSensitiveLog: (obj: ShotSegment) => any;
export declare const TechnicalCueSegmentFilterSensitiveLog: (
  obj: TechnicalCueSegment
) => any;
export declare const SegmentDetectionFilterSensitiveLog: (
  obj: SegmentDetection
) => any;
export declare const SegmentTypeInfoFilterSensitiveLog: (
  obj: SegmentTypeInfo
) => any;
export declare const GetSegmentDetectionResponseFilterSensitiveLog: (
  obj: GetSegmentDetectionResponse
) => any;
export declare const GetTextDetectionRequestFilterSensitiveLog: (
  obj: GetTextDetectionRequest
) => any;
export declare const TextDetectionResultFilterSensitiveLog: (
  obj: TextDetectionResult
) => any;
export declare const GetTextDetectionResponseFilterSensitiveLog: (
  obj: GetTextDetectionResponse
) => any;
export declare const IndexFacesRequestFilterSensitiveLog: (
  obj: IndexFacesRequest
) => any;
export declare const UnindexedFaceFilterSensitiveLog: (
  obj: UnindexedFace
) => any;
export declare const IndexFacesResponseFilterSensitiveLog: (
  obj: IndexFacesResponse
) => any;
export declare const KinesisVideoStreamStartSelectorFilterSensitiveLog: (
  obj: KinesisVideoStreamStartSelector
) => any;
export declare const ListCollectionsRequestFilterSensitiveLog: (
  obj: ListCollectionsRequest
) => any;
export declare const ListCollectionsResponseFilterSensitiveLog: (
  obj: ListCollectionsResponse
) => any;
export declare const ListDatasetEntriesRequestFilterSensitiveLog: (
  obj: ListDatasetEntriesRequest
) => any;
export declare const ListDatasetEntriesResponseFilterSensitiveLog: (
  obj: ListDatasetEntriesResponse
) => any;
export declare const ListDatasetLabelsRequestFilterSensitiveLog: (
  obj: ListDatasetLabelsRequest
) => any;
export declare const ListDatasetLabelsResponseFilterSensitiveLog: (
  obj: ListDatasetLabelsResponse
) => any;
export declare const ListFacesRequestFilterSensitiveLog: (
  obj: ListFacesRequest
) => any;
export declare const ListFacesResponseFilterSensitiveLog: (
  obj: ListFacesResponse
) => any;
export declare const ListProjectPoliciesRequestFilterSensitiveLog: (
  obj: ListProjectPoliciesRequest
) => any;
export declare const ProjectPolicyFilterSensitiveLog: (
  obj: ProjectPolicy
) => any;
export declare const ListProjectPoliciesResponseFilterSensitiveLog: (
  obj: ListProjectPoliciesResponse
) => any;
export declare const ListStreamProcessorsRequestFilterSensitiveLog: (
  obj: ListStreamProcessorsRequest
) => any;
export declare const StreamProcessorFilterSensitiveLog: (
  obj: StreamProcessor
) => any;
export declare const ListStreamProcessorsResponseFilterSensitiveLog: (
  obj: ListStreamProcessorsResponse
) => any;
export declare const ListTagsForResourceRequestFilterSensitiveLog: (
  obj: ListTagsForResourceRequest
) => any;
export declare const ListTagsForResourceResponseFilterSensitiveLog: (
  obj: ListTagsForResourceResponse
) => any;
export declare const NotificationChannelFilterSensitiveLog: (
  obj: NotificationChannel
) => any;
export declare const PutProjectPolicyRequestFilterSensitiveLog: (
  obj: PutProjectPolicyRequest
) => any;
export declare const PutProjectPolicyResponseFilterSensitiveLog: (
  obj: PutProjectPolicyResponse
) => any;
export declare const RecognizeCelebritiesRequestFilterSensitiveLog: (
  obj: RecognizeCelebritiesRequest
) => any;
export declare const RecognizeCelebritiesResponseFilterSensitiveLog: (
  obj: RecognizeCelebritiesResponse
) => any;
export declare const SearchFacesRequestFilterSensitiveLog: (
  obj: SearchFacesRequest
) => any;
export declare const SearchFacesResponseFilterSensitiveLog: (
  obj: SearchFacesResponse
) => any;
export declare const SearchFacesByImageRequestFilterSensitiveLog: (
  obj: SearchFacesByImageRequest
) => any;
export declare const SearchFacesByImageResponseFilterSensitiveLog: (
  obj: SearchFacesByImageResponse
) => any;
export declare const VideoFilterSensitiveLog: (obj: Video) => any;
export declare const StartCelebrityRecognitionRequestFilterSensitiveLog: (
  obj: StartCelebrityRecognitionRequest
) => any;
export declare const StartCelebrityRecognitionResponseFilterSensitiveLog: (
  obj: StartCelebrityRecognitionResponse
) => any;
export declare const StartContentModerationRequestFilterSensitiveLog: (
  obj: StartContentModerationRequest
) => any;
export declare const StartContentModerationResponseFilterSensitiveLog: (
  obj: StartContentModerationResponse
) => any;
export declare const StartFaceDetectionRequestFilterSensitiveLog: (
  obj: StartFaceDetectionRequest
) => any;
export declare const StartFaceDetectionResponseFilterSensitiveLog: (
  obj: StartFaceDetectionResponse
) => any;
export declare const StartFaceSearchRequestFilterSensitiveLog: (
  obj: StartFaceSearchRequest
) => any;
export declare const StartFaceSearchResponseFilterSensitiveLog: (
  obj: StartFaceSearchResponse
) => any;
export declare const StartLabelDetectionRequestFilterSensitiveLog: (
  obj: StartLabelDetectionRequest
) => any;
export declare const StartLabelDetectionResponseFilterSensitiveLog: (
  obj: StartLabelDetectionResponse
) => any;
export declare const StartPersonTrackingRequestFilterSensitiveLog: (
  obj: StartPersonTrackingRequest
) => any;
export declare const StartPersonTrackingResponseFilterSensitiveLog: (
  obj: StartPersonTrackingResponse
) => any;
export declare const StartProjectVersionRequestFilterSensitiveLog: (
  obj: StartProjectVersionRequest
) => any;
export declare const StartProjectVersionResponseFilterSensitiveLog: (
  obj: StartProjectVersionResponse
) => any;
export declare const StartShotDetectionFilterFilterSensitiveLog: (
  obj: StartShotDetectionFilter
) => any;
export declare const StartTechnicalCueDetectionFilterFilterSensitiveLog: (
  obj: StartTechnicalCueDetectionFilter
) => any;
export declare const StartSegmentDetectionFiltersFilterSensitiveLog: (
  obj: StartSegmentDetectionFilters
) => any;
export declare const StartSegmentDetectionRequestFilterSensitiveLog: (
  obj: StartSegmentDetectionRequest
) => any;
export declare const StartSegmentDetectionResponseFilterSensitiveLog: (
  obj: StartSegmentDetectionResponse
) => any;
export declare const StreamProcessingStartSelectorFilterSensitiveLog: (
  obj: StreamProcessingStartSelector
) => any;
export declare const StreamProcessingStopSelectorFilterSensitiveLog: (
  obj: StreamProcessingStopSelector
) => any;
export declare const StartStreamProcessorRequestFilterSensitiveLog: (
  obj: StartStreamProcessorRequest
) => any;
export declare const StartStreamProcessorResponseFilterSensitiveLog: (
  obj: StartStreamProcessorResponse
) => any;
export declare const StartTextDetectionFiltersFilterSensitiveLog: (
  obj: StartTextDetectionFilters
) => any;
export declare const StartTextDetectionRequestFilterSensitiveLog: (
  obj: StartTextDetectionRequest
) => any;
export declare const StartTextDetectionResponseFilterSensitiveLog: (
  obj: StartTextDetectionResponse
) => any;
export declare const StopProjectVersionRequestFilterSensitiveLog: (
  obj: StopProjectVersionRequest
) => any;
export declare const StopProjectVersionResponseFilterSensitiveLog: (
  obj: StopProjectVersionResponse
) => any;
export declare const StopStreamProcessorRequestFilterSensitiveLog: (
  obj: StopStreamProcessorRequest
) => any;
export declare const StopStreamProcessorResponseFilterSensitiveLog: (
  obj: StopStreamProcessorResponse
) => any;
export declare const TagResourceRequestFilterSensitiveLog: (
  obj: TagResourceRequest
) => any;
export declare const TagResourceResponseFilterSensitiveLog: (
  obj: TagResourceResponse
) => any;
export declare const UntagResourceRequestFilterSensitiveLog: (
  obj: UntagResourceRequest
) => any;
export declare const UntagResourceResponseFilterSensitiveLog: (
  obj: UntagResourceResponse
) => any;
export declare const UpdateDatasetEntriesRequestFilterSensitiveLog: (
  obj: UpdateDatasetEntriesRequest
) => any;
export declare const UpdateDatasetEntriesResponseFilterSensitiveLog: (
  obj: UpdateDatasetEntriesResponse
) => any;
export declare const StreamProcessorSettingsForUpdateFilterSensitiveLog: (
  obj: StreamProcessorSettingsForUpdate
) => any;
export declare const UpdateStreamProcessorRequestFilterSensitiveLog: (
  obj: UpdateStreamProcessorRequest
) => any;
export declare const UpdateStreamProcessorResponseFilterSensitiveLog: (
  obj: UpdateStreamProcessorResponse
) => any;
