import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ListDatasetEntriesRequest, ListDatasetEntriesResponse } from "../models/models_0";
import { RekognitionClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RekognitionClient";
export interface ListDatasetEntriesCommandInput extends ListDatasetEntriesRequest {
}
export interface ListDatasetEntriesCommandOutput extends ListDatasetEntriesResponse, __MetadataBearer {
}
/**
 * <p>
 * Lists the entries (images) within a dataset. An entry is a
 * JSON Line that contains the information for a single image, including
 * the image location, assigned labels, and object location bounding boxes. For
 * more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/customlabels-dg/md-manifest-files.html">Creating a manifest file</a>.</p>
 *          <p>JSON Lines in the response include information about non-terminal
 *    errors found in the dataset.
 *    Non terminal errors are reported in <code>errors</code> lists within each JSON Line. The
 *    same information is reported in the training and testing validation result manifests that
 *    Amazon Rekognition Custom Labels creates during model training.
 *  </p>
 *
 *          <p>You can filter the response in variety of ways, such as choosing which labels to return and returning JSON Lines created after a specific date.
 * </p>
 *          <p>This operation requires permissions to perform the <code>rekognition:ListDatasetEntries</code> action.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { RekognitionClient, ListDatasetEntriesCommand } from "@aws-sdk/client-rekognition"; // ES Modules import
 * // const { RekognitionClient, ListDatasetEntriesCommand } = require("@aws-sdk/client-rekognition"); // CommonJS import
 * const client = new RekognitionClient(config);
 * const command = new ListDatasetEntriesCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link ListDatasetEntriesCommandInput} for command's `input` shape.
 * @see {@link ListDatasetEntriesCommandOutput} for command's `response` shape.
 * @see {@link RekognitionClientResolvedConfig | config} for RekognitionClient's `config` shape.
 *
 */
export declare class ListDatasetEntriesCommand extends $Command<ListDatasetEntriesCommandInput, ListDatasetEntriesCommandOutput, RekognitionClientResolvedConfig> {
    readonly input: ListDatasetEntriesCommandInput;
    constructor(input: ListDatasetEntriesCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RekognitionClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDatasetEntriesCommandInput, ListDatasetEntriesCommandOutput>;
    private serialize;
    private deserialize;
}
