"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLoggerPlugin = exports.loggerMiddlewareOptions = exports.loggerMiddleware = void 0;
var tslib_1 = require("tslib");
exports.loggerMiddleware = function () { return function (next, context) { return function (args) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
    var logger, inputFilterSensitiveLog, outputFilterSensitiveLog, response, _a, $metadata, outputWithoutMetadata;
    return tslib_1.__generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                logger = context.logger, inputFilterSensitiveLog = context.inputFilterSensitiveLog, outputFilterSensitiveLog = context.outputFilterSensitiveLog;
                return [4 /*yield*/, next(args)];
            case 1:
                response = _b.sent();
                if (!logger) {
                    return [2 /*return*/, response];
                }
                _a = response.output, $metadata = _a.$metadata, outputWithoutMetadata = tslib_1.__rest(_a, ["$metadata"]);
                if (typeof logger.debug === "function") {
                    logger.debug({
                        httpRequest: args.request,
                    });
                    logger.debug({
                        httpResponse: response.response,
                    });
                }
                if (typeof logger.info === "function") {
                    logger.info({
                        $metadata: $metadata,
                        input: inputFilterSensitiveLog(args.input),
                        output: outputFilterSensitiveLog(outputWithoutMetadata),
                    });
                }
                return [2 /*return*/, response];
        }
    });
}); }; }; };
exports.loggerMiddlewareOptions = {
    name: "loggerMiddleware",
    tags: ["LOGGER"],
    step: "finalizeRequest",
};
// eslint-disable-next-line @typescript-eslint/no-unused-vars
exports.getLoggerPlugin = function (options) { return ({
    applyToStack: function (clientStack) {
        clientStack.add(exports.loggerMiddleware(), exports.loggerMiddlewareOptions);
    },
}); };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyTWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9sb2dnZXJNaWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFhYSxRQUFBLGdCQUFnQixHQUFHLGNBQU0sT0FBQSxVQUNwQyxJQUFrQyxFQUNsQyxPQUFnQyxJQUNDLE9BQUEsVUFDakMsSUFBbUM7Ozs7O2dCQUUzQixNQUFNLEdBQXdELE9BQU8sT0FBL0QsRUFBRSx1QkFBdUIsR0FBK0IsT0FBTyx3QkFBdEMsRUFBRSx3QkFBd0IsR0FBSyxPQUFPLHlCQUFaLENBQWE7Z0JBRTdELHFCQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQTs7Z0JBQTNCLFFBQVEsR0FBRyxTQUFnQjtnQkFFakMsSUFBSSxDQUFDLE1BQU0sRUFBRTtvQkFDWCxzQkFBTyxRQUFRLEVBQUM7aUJBQ2pCO2dCQUdDLEtBQ0UsUUFBUSxPQURxQyxFQUFyQyxTQUFTLGVBQUEsRUFBSyxxQkFBcUIsc0JBQXJDLGFBQXVDLENBQUYsQ0FDbEM7Z0JBRWIsSUFBSSxPQUFPLE1BQU0sQ0FBQyxLQUFLLEtBQUssVUFBVSxFQUFFO29CQUN0QyxNQUFNLENBQUMsS0FBSyxDQUFDO3dCQUNYLFdBQVcsRUFBRSxJQUFJLENBQUMsT0FBTztxQkFDMUIsQ0FBQyxDQUFDO29CQUNILE1BQU0sQ0FBQyxLQUFLLENBQUM7d0JBQ1gsWUFBWSxFQUFFLFFBQVEsQ0FBQyxRQUFRO3FCQUNoQyxDQUFDLENBQUM7aUJBQ0o7Z0JBRUQsSUFBSSxPQUFPLE1BQU0sQ0FBQyxJQUFJLEtBQUssVUFBVSxFQUFFO29CQUNyQyxNQUFNLENBQUMsSUFBSSxDQUFDO3dCQUNWLFNBQVMsV0FBQTt3QkFDVCxLQUFLLEVBQUUsdUJBQXVCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQzt3QkFDMUMsTUFBTSxFQUFFLHdCQUF3QixDQUFDLHFCQUFxQixDQUFDO3FCQUN4RCxDQUFDLENBQUM7aUJBQ0o7Z0JBRUQsc0JBQU8sUUFBUSxFQUFDOzs7S0FDakIsRUFqQ2tDLENBaUNsQyxFQXBDcUMsQ0FvQ3JDLENBQUM7QUFFVyxRQUFBLHVCQUF1QixHQUFxRDtJQUN2RixJQUFJLEVBQUUsa0JBQWtCO0lBQ3hCLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQztJQUNoQixJQUFJLEVBQUUsaUJBQWlCO0NBQ3hCLENBQUM7QUFFRiw2REFBNkQ7QUFDaEQsUUFBQSxlQUFlLEdBQUcsVUFBQyxPQUE2QixJQUEwQixPQUFBLENBQUM7SUFDdEYsWUFBWSxFQUFFLFVBQUMsV0FBVztRQUN4QixXQUFXLENBQUMsR0FBRyxDQUFDLHdCQUFnQixFQUFFLEVBQUUsK0JBQXVCLENBQUMsQ0FBQztJQUMvRCxDQUFDO0NBQ0YsQ0FBQyxFQUpxRixDQUlyRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWJzb2x1dGVMb2NhdGlvbixcbiAgRmluYWxpemVIYW5kbGVyLFxuICBGaW5hbGl6ZUhhbmRsZXJBcmd1bWVudHMsXG4gIEZpbmFsaXplSGFuZGxlck91dHB1dCxcbiAgRmluYWxpemVSZXF1ZXN0SGFuZGxlck9wdGlvbnMsXG4gIEhhbmRsZXJFeGVjdXRpb25Db250ZXh0LFxuICBNZXRhZGF0YUJlYXJlcixcbiAgUGx1Z2dhYmxlLFxufSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgTG9nZ2VyUmVzb2x2ZWRDb25maWcgfSBmcm9tIFwiLi9jb25maWd1cmF0aW9uc1wiO1xuXG5leHBvcnQgY29uc3QgbG9nZ2VyTWlkZGxld2FyZSA9ICgpID0+IDxPdXRwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlciA9IE1ldGFkYXRhQmVhcmVyPihcbiAgbmV4dDogRmluYWxpemVIYW5kbGVyPGFueSwgT3V0cHV0PixcbiAgY29udGV4dDogSGFuZGxlckV4ZWN1dGlvbkNvbnRleHRcbik6IEZpbmFsaXplSGFuZGxlcjxhbnksIE91dHB1dD4gPT4gYXN5bmMgKFxuICBhcmdzOiBGaW5hbGl6ZUhhbmRsZXJBcmd1bWVudHM8YW55PlxuKTogUHJvbWlzZTxGaW5hbGl6ZUhhbmRsZXJPdXRwdXQ8T3V0cHV0Pj4gPT4ge1xuICBjb25zdCB7IGxvZ2dlciwgaW5wdXRGaWx0ZXJTZW5zaXRpdmVMb2csIG91dHB1dEZpbHRlclNlbnNpdGl2ZUxvZyB9ID0gY29udGV4dDtcblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG5leHQoYXJncyk7XG5cbiAgaWYgKCFsb2dnZXIpIHtcbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH1cblxuICBjb25zdCB7XG4gICAgb3V0cHV0OiB7ICRtZXRhZGF0YSwgLi4ub3V0cHV0V2l0aG91dE1ldGFkYXRhIH0sXG4gIH0gPSByZXNwb25zZTtcblxuICBpZiAodHlwZW9mIGxvZ2dlci5kZWJ1ZyA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgbG9nZ2VyLmRlYnVnKHtcbiAgICAgIGh0dHBSZXF1ZXN0OiBhcmdzLnJlcXVlc3QsXG4gICAgfSk7XG4gICAgbG9nZ2VyLmRlYnVnKHtcbiAgICAgIGh0dHBSZXNwb25zZTogcmVzcG9uc2UucmVzcG9uc2UsXG4gICAgfSk7XG4gIH1cblxuICBpZiAodHlwZW9mIGxvZ2dlci5pbmZvID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBsb2dnZXIuaW5mbyh7XG4gICAgICAkbWV0YWRhdGEsXG4gICAgICBpbnB1dDogaW5wdXRGaWx0ZXJTZW5zaXRpdmVMb2coYXJncy5pbnB1dCksXG4gICAgICBvdXRwdXQ6IG91dHB1dEZpbHRlclNlbnNpdGl2ZUxvZyhvdXRwdXRXaXRob3V0TWV0YWRhdGEpLFxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHJlc3BvbnNlO1xufTtcblxuZXhwb3J0IGNvbnN0IGxvZ2dlck1pZGRsZXdhcmVPcHRpb25zOiBGaW5hbGl6ZVJlcXVlc3RIYW5kbGVyT3B0aW9ucyAmIEFic29sdXRlTG9jYXRpb24gPSB7XG4gIG5hbWU6IFwibG9nZ2VyTWlkZGxld2FyZVwiLFxuICB0YWdzOiBbXCJMT0dHRVJcIl0sXG4gIHN0ZXA6IFwiZmluYWxpemVSZXF1ZXN0XCIsXG59O1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG5leHBvcnQgY29uc3QgZ2V0TG9nZ2VyUGx1Z2luID0gKG9wdGlvbnM6IExvZ2dlclJlc29sdmVkQ29uZmlnKTogUGx1Z2dhYmxlPGFueSwgYW55PiA9PiAoe1xuICBhcHBseVRvU3RhY2s6IChjbGllbnRTdGFjaykgPT4ge1xuICAgIGNsaWVudFN0YWNrLmFkZChsb2dnZXJNaWRkbGV3YXJlKCksIGxvZ2dlck1pZGRsZXdhcmVPcHRpb25zKTtcbiAgfSxcbn0pO1xuIl19